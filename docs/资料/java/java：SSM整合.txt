java：ssm整合
	新建dynamic web 
	导入jar包
	配置
		aopalliance-1.0.jar
		asm-3.3.1.jar
		aspectjweaver-1.6.11.jar
		cglib-2.2.2.jar
		commons-codec-1.5.jar
		commons-dbcp-1.2.2.jar
		commons-fileupload-1.2.2.jar
		commons-io-2.4.jar
		commons-logging-1.1.1.jar
		commons-pool-1.3.jar
		ehcache-core-2.6.5.jar
		jackson-core-asl-1.9.11.jar
		jackson-mapper-asl-1.9.11.jar
		javassist-3.17.1-GA.jar
		jstl-1.2.jar
		log4j-1.2.17.jar
		log4j-api-2.0-beta9.jar
		log4j-core-2.0-beta9.jar
		mybatis-3.2.3.jar
		mybatis-ehcache-1.0.2.jar
		mybatis-spring-1.2.2.jar
		mysql-connector-java-5.1.7-bin.jar
		ojdbc14-10.2.0.1.0.jar
		slf4j-api-1.7.5.jar
		slf4j-log4j12-1.7.5.jar
		spring-aop-3.1.4.RELEASE.jar
		spring-asm-3.1.4.RELEASE.jar
		spring-batch-infrastructure-2.2.2.RELEASE.jar
		spring-beans-3.1.4.RELEASE.jar
		spring-context-3.1.4.RELEASE.jar
		spring-context-support-3.1.4.RELEASE.jar
		spring-core-3.1.4.RELEASE.jar
		spring-expression-3.1.4.RELEASE.jar
		spring-jdbc-3.1.4.RELEASE.jar
		spring-retry-1.0.2.RELEASE.jar
		spring-test-3.1.4.RELEASE.jar
		spring-tx-3.1.4.RELEASE.jar
		spring-web-3.1.4.RELEASE.jar
		spring-webmvc-3.1.4.RELEASE.jar
		standard-1.1.2.jar

config/spring/applicationContext.xml
			<?xml version="1.0" encoding="UTF-8"?>
		<beans xmlns="http://www.springframework.org/schema/beans"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
			xmlns:context="http://www.springframework.org/schema/context"
			xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
			xsi:schemaLocation="http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
				http://www.springframework.org/schema/mvc 
				http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context-3.1.xsd 
				http://www.springframework.org/schema/aop 
				http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
				http://www.springframework.org/schema/tx 
				http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

		<!-- 加载数据源参数 -->
		<context:property-placeholder location="classpath:db.properties"/>

		<!-- 数据源 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
				<!-- 开发环境数据最大链接数据设置为你够用就行了 -->
				<property name="maxActive" value="${jdbc.maxActive}" />
				<property name="maxIdle" value="${jdbc.maxIdle}" />
		</bean>

		<!-- 事务管理器
		对mybatis的事务管理，spring使用jdbc的事务
		 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		<!-- 通知 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
		   <tx:attributes>
			 <tx:method name="save*" propagation="REQUIRED"/>
			  <tx:method name="insert*" propagation="REQUIRED"/>
			  <tx:method name="delete*" propagation="REQUIRED"/>
			  <tx:method name="update*" propagation="REQUIRED"/>
			  <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
			  <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
		   </tx:attributes>
		</tx:advice>
		<!-- aop 基于接口的代理需要设置proxy-target-class="true"-->
		<aop:config proxy-target-class="true">
		  <aop:advisor advice-ref="txAdvice" 
		  pointcut="execution(* com.test.ssm.service.*.*(..))"/>
		</aop:config>

		</beans>
		
config/db.properties		
		jdbc.driver=com.mysql.jdbc.Driver
		jdbc.url=jdbc:mysql://localhost:3306/mybatis?useSSL=false
		jdbc.username=root
		jdbc.password=root
		jdbc.maxActive=5
		jdbc.maxIdle=3


config/log4j.properties	
	# Global logging configuration
	log4j.rootLogger=DEBUG, stdout
	# Console output...
	log4j.appender.stdout=org.apache.log4j.ConsoleAppender
	log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
	log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n
		
config/spring/applicationContext-dao.xml

	<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.1.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

	<!-- mybatis运行环境 -->
	<!-- 配置会话工厂，由spring管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
	</bean>

	<!-- 1.原始编写dao的方法 -->
		<bean id="userDao" class="com.test.ssm.dao.old.UseDaoImpl">
		   <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		</bean>

	<!-- 2.通过代理对象方法生成mapper实现对象
	此种方法需要每个mapper进行配置，麻烦，不使用此方法
	 -->
		<!-- <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		   指定mapper地址
		   <property name="mapperInterface"   value="com.test.ssm.dao.mapper.UserMapper" />  
		   <property name="sqlSessionFactory" ref="sqlSessionFactory" /> 
		</bean>  -->

	<!-- 3.使用mapper自动扫描器 
	自动将mapper包中的mapper扫描出来，注册到spring容器中，bean的id是mapper的类名(第一个字母小写)
	-->
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 <!--   指定mapper扫描的包 -->
	   <property name="basePackage" value="com.test.ssm.dao.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean> 

	</beans>
	
config/spring/applicationContext-service.xml
	<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.1.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

		<bean id="userService" class="com.test.ssm.service.UserServiceImpl">
		 
		</bean>


	</beans>
	
config/spring/springmvc.xml
	<?xml version="1.0" encoding="UTF-8"?>
	<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.1.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

	<!-- 组件扫描 扫描的标记@Controller注解的类，通过组件扫描将Controller注解的类发现，注入到spring容器 -->	
	<context:component-scan base-package="com.test.ssm.action"></context:component-scan>	

	<!-- 处理器映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />  -->
	<!-- 处理器适配器 -->
	<!--  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" /> -->
	 
	 <mvc:annotation-driven />
	 
	<!-- 视图解析器 viewResolver -->
	<!-- 解析jsp视图，默认支持jstl标签-->
		<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<!-- jsq文件前缀 -->
			<property name="prefix" value="/WEB-INF/jsp/"></property>
			<!-- jsq文件后缀缀 -->
			<property name="suffix" value=".jsp"></property>
		</bean>
		
	</beans>
	
config/mybatis/SqlMapConfig.xml	
	<?xml version="1.0" encoding="UTF-8" ?>
	<!DOCTYPE configuration
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-config.dtd">
	<configuration>

	<mappers>

		 <!-- 通过resource扫描user.xml -->
		<mapper resource="com/test/ssm/dao/old/User.xml"/>
		<!-- 扫描"com.test.ssm.dao.mapper"包下的mapper接口
		如果使用spring与mybatis提供mapper扫描，此处不用配置
		-->
		<!--  <package name="com.test.ssm.dao.mapper" />  -->
		
	</mappers>

	</configuration>

/SSH_Integration_Action/WebContent/WEB-INF/web.xml

	<?xml version="1.0" encoding="UTF-8"?>
	<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
	  <display-name>SSH_Integration_Action</display-name>
	  <!-- spring环境 -->
	   <context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- <param-value>/WEB-INF/classes/spring/applicationContext.xml,/WEB-INF/classes/spring/applicationContext-*.xml</param-value> -->
		<param-value>classpath:spring/applicationContext.xml,classpath:spring/applicationContext-*.xml</param-value>
	  </context-param>
	  <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	  </listener>
	  
	  <!-- springmvc前端控制器 -->
	  <servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
		  <param-name>contextConfigLocation</param-name>
		  <!-- 指定加载的springmvc框架配置文件
		  默认命名方式：servlet的name+'-servlet.xml'，即springmvc-servlet.xml，此文件默认在/WEB-INF/下
		   -->
		  <param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
		
	  </servlet>
	  <servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.action</url-pattern>
	  </servlet-mapping>
	 
	 <!-- post乱码过虑器 -->
	 <filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
		  <param-name>encoding</param-name>
		  <param-value>utf-8</param-value>
		</init-param>
	  </filter>
	  <filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	  </filter-mapping>
	  
	  <welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	  </welcome-file-list>
	</web-app>
	
/SSH_Integration_Action/WebContent/WEB-INF/jsp/queryUser.jsp
	  ${user.username } <br>
	<%-- http://localhost:8080/SSH_Integration_Action/queryUser.action?id=1  --%>