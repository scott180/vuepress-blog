(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{526:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"spring-cloud-入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-入门"}},[s._v("#")]),s._v(" Spring Cloud 入门")]),s._v(" "),t("br"),s._v(" "),t("blockquote",[t("p",[s._v("本文基于 Spring Cloud Netflix")]),s._v(" "),t("p",[s._v("转载自：https://juejin.im/post/5de2553e5188256e885f4fa3")])]),s._v(" "),t("p",[s._v("首先我给大家看一张图，如果大家对这张图有些地方不太理解的话，我希望你们看完我这篇文章会恍然大悟。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/spring-cloud%E6%80%BB%E4%BD%93%E6%9E%B6%E6%9E%84.jpg",alt:"Spring Cloud 总体架构"}})]),s._v(" "),t("h2",{attrs:{id:"什么是spring-cloud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是spring-cloud"}},[s._v("#")]),s._v(" 什么是Spring Cloud")]),s._v(" "),t("blockquote",[t("p",[s._v("构建分布式系统不需要复杂和容易出错。Spring Cloud 为最常见的分布式系统模式提供了一种简单且易于接受的编程模型，帮助开发人员构建有弹性的、可靠的、协调的应用程序。Spring Cloud 构建于 Spring Boot 之上，使得开发者很容易入手并快速应用于生产中。")])]),s._v(" "),t("p",[s._v("官方果然官方，介绍都这么有板有眼的。")]),s._v(" "),t("p",[s._v("我所理解的 "),t("code",[s._v("Spring Cloud")]),s._v(" 就是微服务系统架构的一站式解决方案，在平时我们构建微服务的过程中需要做如 "),t("strong",[s._v("服务发现注册")]),s._v(" 、"),t("strong",[s._v("配置中心")]),s._v(" 、"),t("strong",[s._v("消息总线")]),s._v(" 、"),t("strong",[s._v("负载均衡")]),s._v(" 、"),t("strong",[s._v("断路器")]),s._v(" 、"),t("strong",[s._v("数据监控")]),s._v(" 等操作，而 Spring Cloud 为我们提供了一套简易的编程模型，使我们能在 Spring Boot 的基础上轻松地实现微服务项目的构建。")]),s._v(" "),t("h2",{attrs:{id:"spring-cloud-的版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-的版本"}},[s._v("#")]),s._v(" Spring Cloud 的版本")]),s._v(" "),t("p",[s._v("当然这个只是个题外话。")]),s._v(" "),t("p",[t("code",[s._v("Spring Cloud")]),s._v(" 的版本号并不是我们通常见的数字版本号，而是一些很奇怪的单词。这些单词均为英国伦敦地铁站的站名。同时根据字母表的顺序来对应版本时间顺序，比如：最早 的 "),t("code",[s._v("Release")]),s._v(" 版本 "),t("code",[s._v("Angel")]),s._v("，第二个 "),t("code",[s._v("Release")]),s._v(" 版本 "),t("code",[s._v("Brixton")]),s._v("（英国地名），然后是 "),t("code",[s._v("Camden")]),s._v("、 "),t("code",[s._v("Dalston")]),s._v("、"),t("code",[s._v("Edgware")]),s._v("、"),t("code",[s._v("Finchley")]),s._v("、"),t("code",[s._v("Greenwich")]),s._v("、"),t("code",[s._v("Hoxton")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"spring-cloud-的服务发现框架-eureka"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-的服务发现框架-eureka"}},[s._v("#")]),s._v(" Spring Cloud 的服务发现框架——Eureka")]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("Eureka")]),s._v("是基于"),t("code",[s._v("REST")]),s._v("（代表性状态转移）的服务，主要在 "),t("code",[s._v("AWS")]),s._v(" 云中用于定位服务，以实现负载均衡和中间层服务器的故障转移。我们称此服务为"),t("code",[s._v("Eureka")]),s._v("服务器。Eureka还带有一个基于 "),t("code",[s._v("Java")]),s._v(" 的客户端组件 "),t("code",[s._v("Eureka Client")]),s._v("，它使与服务的交互变得更加容易。客户端还具有一个内置的负载平衡器，可以执行基本的循环负载平衡。在 "),t("code",[s._v("Netflix")]),s._v("，更复杂的负载均衡器将 "),t("code",[s._v("Eureka")]),s._v(" 包装起来，以基于流量，资源使用，错误条件等多种因素提供加权负载均衡，以提供出色的弹性。")])]),s._v(" "),t("p",[s._v("总的来说，"),t("code",[s._v("Eureka")]),s._v(" 就是一个服务发现框架。何为服务，何又为发现呢？")]),s._v(" "),t("p",[s._v("举一个生活中的例子，就比如我们平时租房子找中介的事情。")]),s._v(" "),t("p",[s._v("在没有中介的时候我们需要一个一个去寻找是否有房屋要出租的房东，这显然会非常的费力，一你找凭一个人的能力是找不到很多房源供你选择，再者你也懒得这么找下去(找了这么久，没有合适的只能将就)。"),t("strong",[s._v("这里的我们就相当于微服务中的 "),t("code",[s._v("Consumer")]),s._v(" ，而那些房东就相当于微服务中的 "),t("code",[s._v("Provider")]),s._v(" 。消费者 "),t("code",[s._v("Consumer")]),s._v(" 需要调用提供者 "),t("code",[s._v("Provider")]),s._v(" 提供的一些服务，就像我们现在需要租他们的房子一样。")])]),s._v(" "),t("p",[s._v("但是如果只是租客和房东之间进行寻找的话，他们的效率是很低的，房东找不到租客赚不到钱，租客找不到房东住不了房。所以，后来房东肯定就想到了广播自己的房源信息(比如在街边贴贴小广告)，这样对于房东来说已经完成他的任务(将房源公布出去)，但是有两个问题就出现了。第一、其他不是租客的都能收到这种租房消息，这在现实世界没什么，但是在计算机的世界中就会出现 "),t("strong",[s._v("资源消耗")]),s._v(" 的问题了。第二、租客这样还是很难找到你，试想一下我需要租房，我还需要东一个西一个地去找街边小广告，麻不麻烦？")]),s._v(" "),t("p",[s._v("那怎么办呢？我们当然不会那么傻乎乎的，第一时间就是去找 "),t("strong",[s._v("中介")]),s._v(" 呀，它为我们提供了统一房源的地方，我们消费者只需要跑到它那里去找就行了。而对于房东来说，他们也只需要把房源在中介那里发布就行了。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/4d161e2950414113834f2f0a8fc2c16c-new-imaged17347a0-e653-4830-9542-3d7ae4305b2b.png",alt:""}})]),s._v(" "),t("p",[s._v("那么现在，我们的模式就是这样的了。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/24382ce6bbd44932ac38b1accade12d1-new-image2ff8affc-6f1d-49de-a8c3-801e7bad2b11.png",alt:""}})]),s._v(" "),t("p",[s._v("但是，这个时候还会出现一些问题。")]),s._v(" "),t("ol",[t("li",[s._v("房东注册之后如果不想卖房子了怎么办？我们是不是需要让房东 "),t("strong",[s._v("定期续约")]),s._v(" ？如果房东不进行续约是不是要将他们从中介那里的注册列表中 "),t("strong",[s._v("移除")]),s._v(" 。")]),s._v(" "),t("li",[s._v("租客是不是也要进行 "),t("strong",[s._v("注册")]),s._v(" 呢？不然合同乙方怎么来呢？")]),s._v(" "),t("li",[s._v("中介可不可以做 "),t("strong",[s._v("连锁店")]),s._v(" 呢？如果这一个店因为某些不可抗力因素而无法使用，那么我们是否可以换一个连锁店呢？")])]),s._v(" "),t("p",[s._v("针对上面的问题我们来重新构建一下上面的模式图")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/%E7%A7%9F%E6%88%BF-%E4%B8%AD%E4%BB%8B%E6%A8%A1%E5%BC%8F%E5%9B%BE.jpg",alt:"租房-中介模式图"}})]),s._v(" "),t("p",[s._v("好了，举完这个🌰我们就可以来看关于 "),t("code",[s._v("Eureka")]),s._v(" 的一些基础概念了，你会发现这东西理解起来怎么这么简单。👊👊👊")]),s._v(" "),t("p",[t("strong",[s._v("服务发现")]),s._v("：其实就是一个“中介”，整个过程中有三个角色："),t("strong",[s._v("服务提供者(出租房子的)、服务消费者(租客)、服务中介(房屋中介)")]),s._v("。")]),s._v(" "),t("p",[t("strong",[s._v("服务提供者")]),s._v("： 就是提供一些自己能够执行的一些服务给外界。")]),s._v(" "),t("p",[t("strong",[s._v("服务消费者")]),s._v("： 就是需要使用一些服务的“用户”。")]),s._v(" "),t("p",[t("strong",[s._v("服务中介")]),s._v("： 其实就是服务提供者和服务消费者之间的“桥梁”，服务提供者可以把自己注册到服务中介那里，而服务消费者如需要消费一些服务(使用一些功能)就可以在服务中介中寻找注册在服务中介的服务提供者。")]),s._v(" "),t("p",[t("strong",[s._v("服务注册 Register")]),s._v("：")]),s._v(" "),t("p",[s._v("官方解释：当 "),t("code",[s._v("Eureka")]),s._v(" 客户端向 "),t("code",[s._v("Eureka Server")]),s._v(" 注册时，它提供自身的"),t("strong",[s._v("元数据")]),s._v("，比如IP地址、端口，运行状况指示符URL，主页等。")]),s._v(" "),t("p",[s._v("结合中介理解：房东 (提供者 "),t("code",[s._v("Eureka Client Provider")]),s._v(")在中介 (服务器 "),t("code",[s._v("Eureka Server")]),s._v(") 那里登记房屋的信息，比如面积，价格，地段等等(元数据 "),t("code",[s._v("metaData")]),s._v(")。")]),s._v(" "),t("p",[t("strong",[s._v("服务续约 Renew")]),s._v("：")]),s._v(" "),t("p",[s._v("官方解释："),t("strong",[t("code",[s._v("Eureka")]),s._v(" 客户会每隔30秒(默认情况下)发送一次心跳来续约")]),s._v("。 通过续约来告知 "),t("code",[s._v("Eureka Server")]),s._v(" 该 "),t("code",[s._v("Eureka")]),s._v(" 客户仍然存在，没有出现问题。 正常情况下，如果 "),t("code",[s._v("Eureka Server")]),s._v(" 在90秒没有收到 "),t("code",[s._v("Eureka")]),s._v(" 客户的续约，它会将实例从其注册表中删除。")]),s._v(" "),t("p",[s._v("结合中介理解：房东 (提供者 "),t("code",[s._v("Eureka Client Provider")]),s._v(") 定期告诉中介 (服务器 "),t("code",[s._v("Eureka Server")]),s._v(") 我的房子还租(续约) ，中介 (服务器"),t("code",[s._v("Eureka Server")]),s._v(") 收到之后继续保留房屋的信息。")]),s._v(" "),t("p",[t("strong",[s._v("获取注册列表信息 Fetch Registries")]),s._v("：")]),s._v(" "),t("p",[s._v("官方解释："),t("code",[s._v("Eureka")]),s._v(" 客户端从服务器获取注册表信息，并将其缓存在本地。客户端会使用该信息查找其他服务，从而进行远程调用。该注册列表信息定期（每30秒钟）更新一次。每次返回注册列表信息可能与 "),t("code",[s._v("Eureka")]),s._v(" 客户端的缓存信息不同, "),t("code",[s._v("Eureka")]),s._v(" 客户端自动处理。如果由于某种原因导致注册列表信息不能及时匹配，"),t("code",[s._v("Eureka")]),s._v(" 客户端则会重新获取整个注册表信息。 "),t("code",[s._v("Eureka")]),s._v(" 服务器缓存注册列表信息，整个注册表以及每个应用程序的信息进行了压缩，压缩内容和没有压缩的内容完全相同。"),t("code",[s._v("Eureka")]),s._v(" 客户端和 "),t("code",[s._v("Eureka")]),s._v(" 服务器可以使用JSON / XML格式进行通讯。在默认的情况下 "),t("code",[s._v("Eureka")]),s._v(" 客户端使用压缩 "),t("code",[s._v("JSON")]),s._v(" 格式来获取注册列表的信息。")]),s._v(" "),t("p",[s._v("结合中介理解：租客(消费者 "),t("code",[s._v("Eureka Client Consumer")]),s._v(") 去中介 (服务器 "),t("code",[s._v("Eureka Server")]),s._v(") 那里获取所有的房屋信息列表 (客户端列表 "),t("code",[s._v("Eureka Client List")]),s._v(") ，而且租客为了获取最新的信息会定期向中介 (服务器 "),t("code",[s._v("Eureka Server")]),s._v(") 那里获取并更新本地列表。")]),s._v(" "),t("p",[t("strong",[s._v("服务下线 Cancel")]),s._v("：")]),s._v(" "),t("p",[s._v("官方解释：Eureka客户端在程序关闭时向Eureka服务器发送取消请求。 发送请求后，该客户端实例信息将从服务器的实例注册表中删除。该下线请求不会自动完成，它需要调用以下内容："),t("code",[s._v("DiscoveryManager.getInstance().shutdownComponent();")])]),s._v(" "),t("p",[s._v("结合中介理解：房东 (提供者 "),t("code",[s._v("Eureka Client Provider")]),s._v(") 告诉中介  (服务器 "),t("code",[s._v("Eureka Server")]),s._v(") 我的房子不租了，中介之后就将注册的房屋信息从列表中剔除。")]),s._v(" "),t("p",[t("strong",[s._v("服务剔除 Eviction")]),s._v("：")]),s._v(" "),t("p",[s._v("官方解释：在默认的情况下，"),t("strong",[s._v("当Eureka客户端连续90秒(3个续约周期)没有向Eureka服务器发送服务续约，即心跳，Eureka服务器会将该服务实例从服务注册列表删除")]),s._v("，即服务剔除。")]),s._v(" "),t("p",[s._v("结合中介理解：房东(提供者 "),t("code",[s._v("Eureka Client Provider")]),s._v(") 会定期联系 中介  (服务器 "),t("code",[s._v("Eureka Server")]),s._v(") 告诉他我的房子还租(续约)，如果中介  (服务器 "),t("code",[s._v("Eureka Server")]),s._v(") 长时间没收到提供者的信息，那么中介会将他的房屋信息给下架(服务剔除)。")]),s._v(" "),t("p",[s._v("下面就是 "),t("code",[s._v("Netflix")]),s._v(" 官方给出的 "),t("code",[s._v("Eureka")]),s._v(" 架构图，你会发现和我们前面画的中介图别无二致。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/5d723c49eca1468ab7b89af06743023c-new-imageb8aa3d41-fad4-4b38-add9-c304930ab285.png",alt:"Eureka架构图"}})]),s._v(" "),t("p",[s._v("当然，可以充当服务发现的组件有很多："),t("code",[s._v("Zookeeper")]),s._v(" ，"),t("code",[s._v("Consul")]),s._v(" ， "),t("code",[s._v("Eureka")]),s._v(" 等。")]),s._v(" "),t("p",[s._v("更多关于 "),t("code",[s._v("Eureka")]),s._v(" 的知识(自我保护，初始注册策略等等)可以自己去官网查看，或者查看我的另一篇文章 "),t("a",{attrs:{href:"https://juejin.im/post/5dd497e3f265da0ba7718018",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入理解 Eureka"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"负载均衡之-ribbon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡之-ribbon"}},[s._v("#")]),s._v(" 负载均衡之 Ribbon")]),s._v(" "),t("h3",{attrs:{id:"什么是-resttemplate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-resttemplate"}},[s._v("#")]),s._v(" 什么是 "),t("code",[s._v("RestTemplate")]),s._v("?")]),s._v(" "),t("p",[s._v("不是讲 "),t("code",[s._v("Ribbon")]),s._v(" 么？怎么扯到了 "),t("code",[s._v("RestTemplate")]),s._v(" 了？你先别急，听我慢慢道来。")]),s._v(" "),t("p",[s._v("我不听我不听我不听🙉🙉🙉。")]),s._v(" "),t("p",[s._v("我就说一句！"),t("strong",[t("code",[s._v("RestTemplate")]),s._v("是"),t("code",[s._v("Spring")]),s._v("提供的一个访问Http服务的客户端类")]),s._v("，怎么说呢？就是微服务之间的调用是使用的 "),t("code",[s._v("RestTemplate")]),s._v(" 。比如这个时候我们 消费者B 需要调用 提供者A 所提供的服务我们就需要这么写。如我下面的伪代码。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")]),s._v(" restTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里是提供者A的ip地址，但是如果使用了 Eureka 那么就应该是提供者A的名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SERVICE_PROVIDER_A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8081"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@PostMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/judge"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("judge")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RequestBody")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Request")]),s._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SERVICE_PROVIDER_A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/service1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" restTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("postForObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("如果你对源码感兴趣的话，你会发现上面我们所讲的 "),t("code",[s._v("Eureka")]),s._v(" 框架中的 "),t("strong",[s._v("注册")]),s._v("、"),t("strong",[s._v("续约")]),s._v(" 等，底层都是使用的 "),t("code",[s._v("RestTemplate")]),s._v(" 。")]),s._v(" "),t("h3",{attrs:{id:"为什么需要-ribbon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-ribbon"}},[s._v("#")]),s._v(" 为什么需要 Ribbon？")]),s._v(" "),t("p",[t("code",[s._v("Ribbon")]),s._v("  是 "),t("code",[s._v("Netflix")]),s._v(" 公司的一个开源的负载均衡 项目，是一个客户端/进程内负载均衡器，"),t("strong",[s._v("运行在消费者端")]),s._v("。")]),s._v(" "),t("p",[s._v("我们再举个🌰，比如我们设计了一个秒杀系统，但是为了整个系统的 "),t("strong",[s._v("高可用")]),s._v(" ，我们需要将这个系统做一个集群，而这个时候我们消费者就可以拥有多个秒杀系统的调用途径了，如下图。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/秒杀系统-ribbon.jpg"}}),s._v(" "),t("p",[s._v("如果这个时候我们没有进行一些 "),t("strong",[s._v("均衡操作")]),s._v(" ，如果我们对 "),t("code",[s._v("秒杀系统1")]),s._v(" 进行大量的调用，而另外两个基本不请求，就会导致 "),t("code",[s._v("秒杀系统1")]),s._v(" 崩溃，而另外两个就变成了傀儡，那么我们为什么还要做集群，我们高可用体现的意义又在哪呢？")]),s._v(" "),t("p",[s._v("所以 "),t("code",[s._v("Ribbon")]),s._v(" 出现了，注意我们上面加粗的几个字——"),t("strong",[s._v("运行在消费者端")]),s._v("。指的是，"),t("code",[s._v("Ribbon")]),s._v(" 是运行在消费者端的负载均衡器，如下图。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/秒杀系统-ribbon2.jpg"}}),s._v(" "),t("p",[s._v("其工作原理就是 "),t("code",[s._v("Consumer")]),s._v(" 端获取到了所有的服务列表之后，在其"),t("strong",[s._v("内部")]),s._v("使用"),t("strong",[s._v("负载均衡算法")]),s._v("，进行对多个系统的调用。")]),s._v(" "),t("h3",{attrs:{id:"nginx-和-ribbon-的对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-和-ribbon-的对比"}},[s._v("#")]),s._v(" Nginx 和 Ribbon 的对比")]),s._v(" "),t("p",[s._v("提到 "),t("strong",[s._v("负载均衡")]),s._v(" 就不得不提到大名鼎鼎的 "),t("code",[s._v("Nignx")]),s._v(" 了，而和 "),t("code",[s._v("Ribbon")]),s._v(" 不同的是，它是一种"),t("strong",[s._v("集中式")]),s._v("的负载均衡器。")]),s._v(" "),t("p",[s._v("何为集中式呢？简单理解就是 "),t("strong",[s._v("将所有请求都集中起来，然后再进行负载均衡")]),s._v("。如下图。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/nginx-vs-ribbon1.jpg"}}),s._v(" "),t("p",[s._v("我们可以看到 "),t("code",[s._v("Nginx")]),s._v(" 是接收了所有的请求进行负载均衡的，而对于 "),t("code",[s._v("Ribbon")]),s._v(" 来说它是在消费者端进行的负载均衡。如下图。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/nginx-vs-ribbon2.jpg"}}),s._v(" "),t("blockquote",[t("p",[s._v("请注意 "),t("code",[s._v("Request")]),s._v(" 的位置，在 "),t("code",[s._v("Nginx")]),s._v(" 中请求是先进入负载均衡器，而在 "),t("code",[s._v("Ribbon")]),s._v(" 中是先在客户端进行负载均衡才进行请求的。")])]),s._v(" "),t("h3",{attrs:{id:"ribbon-的几种负载均衡算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ribbon-的几种负载均衡算法"}},[s._v("#")]),s._v(" Ribbon 的几种负载均衡算法")]),s._v(" "),t("p",[s._v("负载均衡，不管 "),t("code",[s._v("Nginx")]),s._v(" 还是 "),t("code",[s._v("Ribbon")]),s._v(" 都需要其算法的支持，如果我没记错的话 "),t("code",[s._v("Nginx")]),s._v(" 使用的是 轮询和加权轮询算法。而在 "),t("code",[s._v("Ribbon")]),s._v(" 中有更多的负载均衡调度算法，其默认是使用的 "),t("code",[s._v("RoundRobinRule")]),s._v(" 轮询策略。")]),s._v(" "),t("ul",[t("li",[t("strong",[t("code",[s._v("RoundRobinRule")])]),s._v("：轮询策略。"),t("code",[s._v("Ribbon")]),s._v(" 默认采用的策略。若经过一轮轮询没有找到可用的 "),t("code",[s._v("provider")]),s._v("，其最多轮询 10 轮。若最终还没有找到，则返回 "),t("code",[s._v("null")]),s._v("。")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("RandomRule")])]),s._v(": 随机策略，从所有可用的 "),t("code",[s._v("provider")]),s._v(" 中随机选择一个。")]),s._v(" "),t("li",[t("strong",[t("code",[s._v("RetryRule")])]),s._v(": 重试策略。先按照 "),t("code",[s._v("RoundRobinRule")]),s._v(" 策略获取 "),t("code",[s._v("provider")]),s._v("，若获取失败，则在指定的时限内重试。默认的时限为 500 毫秒。")])]),s._v(" "),t("p",[s._v("🐦🐦🐦 还有很多，这里不一一举🌰了，你最需要知道的是默认轮询算法，并且可以更换默认的负载均衡算法，只需要在配置文件中做出修改就行。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("providerName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ribbon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("NFLoadBalancerRuleClassName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" com.netflix.loadbalancer.RandomRule\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("当然，在 "),t("code",[s._v("Ribbon")]),s._v(" 中你还可以"),t("strong",[s._v("自定义负载均衡算法")]),s._v("，你只需要实现 "),t("code",[s._v("IRule")]),s._v(" 接口，然后修改配置文件或者自定义 "),t("code",[s._v("Java Config")]),s._v(" 类。")]),s._v(" "),t("h2",{attrs:{id:"什么是-open-feign"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-open-feign"}},[s._v("#")]),s._v(" 什么是 Open Feign")]),s._v(" "),t("p",[s._v("有了 "),t("code",[s._v("Eureka")]),s._v("  ，"),t("code",[s._v("RestTemplate")]),s._v(" ，"),t("code",[s._v("Ribbon")]),s._v("，  我们就可以愉快地进行服务间的调用了，但是使用 "),t("code",[s._v("RestTemplate")]),s._v(" 还是不方便，我们每次都要进行这样的调用。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RestTemplate")]),s._v(" restTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里是提供者A的ip地址，但是如果使用了 Eureka 那么就应该是提供者A的名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SERVICE_PROVIDER_A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost:8081"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@PostMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/judge"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("judge")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RequestBody")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Request")]),s._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SERVICE_PROVIDER_A")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/service1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 是不是太麻烦了？？？每次都要 url、请求、返回类型的 ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" restTemplate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("postForObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("这样每次都调用 "),t("code",[s._v("RestRemplate")]),s._v(" 的 "),t("code",[s._v("API")]),s._v(" 是否太麻烦，我能不能像"),t("strong",[s._v("调用原来代码一样进行各个服务间的调用呢？")])]),s._v(" "),t("p",[s._v("💡💡💡聪明的小朋友肯定想到了，那就用 "),t("strong",[s._v("映射")]),s._v(" 呀，就像域名和IP地址的映射。我们可以将被调用的服务代码映射到消费者端，这样我们就可以 **“无缝开发” **啦。")]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("OpenFeign")]),s._v(" 也是运行在消费者端的，使用 "),t("code",[s._v("Ribbon")]),s._v(" 进行负载均衡，所以 "),t("code",[s._v("OpenFeign")]),s._v(" 直接内置了 "),t("code",[s._v("Ribbon")]),s._v("。")])]),s._v(" "),t("p",[s._v("在导入了 "),t("code",[s._v("Open Feign")]),s._v(" 之后我们就可以进行愉快编写  "),t("code",[s._v("Consumer")]),s._v(" 端代码了。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 @FeignClient 注解来指定提供者的名字")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@FeignClient")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eureka-client-provider"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("interface")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestClient")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里一定要注意需要使用的是提供者那端的请求相对路径，这里就相当于映射了")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RequestMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/provider/xxx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    method "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CommonResponse")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Plan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPlans")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RequestBody")]),s._v(" planGetRequest request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("然后我们在 "),t("code",[s._v("Controller")]),s._v(" 就可以像原来调用 "),t("code",[s._v("Service")]),s._v(" 层代码一样调用它了。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RestController")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestController")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里就相当于原来自动注入的 Service")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestClient")]),s._v(" testClient"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// controller 调用 service 层代码")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RequestMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/test"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" method "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CommonResponse")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Plan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@RequestBody")]),s._v(" planGetRequest request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" testClient"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPlans")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"必不可少的-hystrix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#必不可少的-hystrix"}},[s._v("#")]),s._v(" 必不可少的 Hystrix")]),s._v(" "),t("h3",{attrs:{id:"什么是-hystrix之熔断和降级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-hystrix之熔断和降级"}},[s._v("#")]),s._v(" 什么是 Hystrix之熔断和降级")]),s._v(" "),t("blockquote",[t("p",[s._v("在分布式环境中，不可避免地会有许多服务依赖项中的某些失败。Hystrix是一个库，可通过添加等待时间容限和容错逻辑来帮助您控制这些分布式服务之间的交互。Hystrix通过隔离服务之间的访问点，停止服务之间的级联故障并提供后备选项来实现此目的，所有这些都可以提高系统的整体弹性。")])]),s._v(" "),t("p",[s._v("总体来说 "),t("code",[s._v("Hystrix")]),s._v(" 就是一个能进行 "),t("strong",[s._v("熔断")]),s._v(" 和 "),t("strong",[s._v("降级")]),s._v(" 的库，通过使用它能提高整个系统的弹性。")]),s._v(" "),t("p",[s._v("那么什么是 熔断和降级 呢？再举个🌰，此时我们整个微服务系统是这样的。服务A调用了服务B，服务B再调用了服务C，但是因为某些原因，服务C顶不住了，这个时候大量请求会在服务C阻塞。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/Hystrix1.jpg"}}),s._v(" "),t("p",[s._v("服务C阻塞了还好，毕竟只是一个系统崩溃了。但是请注意这个时候因为服务C不能返回响应，那么服务B调用服务C的的请求就会阻塞，同理服务B阻塞了，那么服务A也会阻塞崩溃。")]),s._v(" "),t("blockquote",[t("p",[s._v("请注意，为什么阻塞会崩溃。因为这些请求会消耗占用系统的线程、IO 等资源，消耗完你这个系统服务器不就崩了么。")])]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/Hystrix2.jpg"}}),s._v(" "),t("p",[s._v("这就叫 "),t("strong",[s._v("服务雪崩")]),s._v("。妈耶，上面两个 "),t("strong",[s._v("熔断")]),s._v(" 和 "),t("strong",[s._v("降级")]),s._v(" 你都没给我解释清楚，你现在又给我扯什么 "),t("strong",[s._v("服务雪崩")]),s._v(" ？😫😫😫")]),s._v(" "),t("p",[s._v("别急，听我慢慢道来。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/513d7e7f6d574fd799195d05556f4aa7-new-image9265b6bd-41ca-4e62-86f3-4341e5bdbe6c.png",alt:""}})]),s._v(" "),t("p",[s._v("不听我也得讲下去！")]),s._v(" "),t("p",[s._v("所谓 "),t("strong",[s._v("熔断")]),s._v(" 就是服务雪崩的一种有效解决方案。当指定时间窗内的请求失败率达到设定阈值时，系统将通过 "),t("strong",[s._v("断路器")]),s._v(" 直接将此请求链路断开。")]),s._v(" "),t("p",[s._v("也就是我们上面服务B调用服务C在指定时间窗内，调用的失败率到达了一定的值，那么 "),t("code",[s._v("Hystrix")]),s._v(" 则会自动将 服务B与C 之间的请求都断了，以免导致服务雪崩现象。")]),s._v(" "),t("p",[s._v("其实这里所讲的 "),t("strong",[s._v("熔断")]),s._v(" 就是指的 "),t("code",[s._v("Hystrix")]),s._v(" 中的 "),t("strong",[s._v("断路器模式")]),s._v(" ，你可以使用简单的 "),t("code",[s._v("@HystrixCommand")]),s._v(" 注解来标注某个方法，这样 "),t("code",[s._v("Hystrix")]),s._v(" 就会使用 "),t("strong",[s._v("断路器")]),s._v(" 来“包装”这个方法，每当调用时间超过指定时间时(默认为1000ms)，断路器将会中断对这个方法的调用。")]),s._v(" "),t("p",[s._v("当然你可以对这个注解的很多属性进行设置，比如设置超时时间，像这样。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@HystrixCommand")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    commandProperties "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@HystrixProperty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"execution.isolation.thread.timeoutInMilliseconds"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1200"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Xxx")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getXxxx")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...省略代码逻辑")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("但是，我查阅了一些博客，发现他们都将 "),t("strong",[s._v("熔断")]),s._v(" 和 "),t("strong",[s._v("降级")]),s._v(" 的概念混淆了，以我的理解，"),t("strong",[s._v("降级是为了更好的用户体验，当一个方法调用异常时，通过执行另一种代码逻辑来给用户友好的回复")]),s._v("。这也就对应着 "),t("code",[s._v("Hystrix")]),s._v(" 的 "),t("strong",[s._v("后备处理")]),s._v(" 模式。你可以通过设置 "),t("code",[s._v("fallbackMethod")]),s._v(" 来给一个方法设置备用的代码逻辑。比如这个时候有一个热点新闻出现了，我们会推荐给用户查看详情，然后用户会通过id去查询新闻的详情，但是因为这条新闻太火了(比如最近什么*易对吧)，大量用户同时访问可能会导致系统崩溃，那么我们就进行 "),t("strong",[s._v("服务降级")]),s._v(" ，一些请求会做一些降级处理比如当前人数太多请稍后查看等等。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定了后备方法调用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@HystrixCommand")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fallbackMethod "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"getHystrixNews"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@GetMapping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/get/news"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("News")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getNews")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@PathVariable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 调用新闻系统的获取新闻api 代码逻辑省略")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("News")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getHystrixNews")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@PathVariable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"id"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 做服务降级")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回当前人数太多，请稍后查看")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"什么是hystrix之其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是hystrix之其他"}},[s._v("#")]),s._v(" 什么是Hystrix之其他")]),s._v(" "),t("p",[s._v("我在阅读 《Spring微服务实战》这本书的时候还接触到了一个 "),t("strong",[s._v("舱壁模式")]),s._v(" 的概念。在不使用舱壁模式的情况下，服务A调用服务B，这种调用默认的是 "),t("strong",[s._v("使用同一批线程来执行")]),s._v(" 的，而在一个服务出现性能问题的时候，就会出现所有线程被刷爆并等待处理工作，同时阻塞新请求，最终导致程序崩溃。而舱壁模式会将远程资源调用隔离在他们自己的线程池中，以便可以控制单个表现不佳的服务，而不会使该程序崩溃。")]),s._v(" "),t("p",[s._v("具体其原理我推荐大家自己去了解一下，本篇文章中对 "),t("strong",[s._v("舱壁模式")]),s._v(" 不做过多解释。当然还有 "),t("strong",[t("code",[s._v("Hystrix")]),s._v(" 仪表盘")]),s._v("，它是"),t("strong",[s._v("用来实时监控 "),t("code",[s._v("Hystrix")]),s._v(" 的各项指标信息的")]),s._v("，这里我将这个问题也抛出去，希望有不了解的可以自己去搜索一下。")]),s._v(" "),t("h2",{attrs:{id:"微服务网关-zuul"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微服务网关-zuul"}},[s._v("#")]),s._v(" 微服务网关——Zuul")]),s._v(" "),t("blockquote",[t("p",[s._v("ZUUL 是从设备和 web 站点到 Netflix 流应用后端的所有请求的前门。作为边界服务应用，ZUUL 是为了实现动态路由、监视、弹性和安全性而构建的。它还具有根据情况将请求路由到多个 Amazon Auto Scaling Groups（亚马逊自动缩放组，亚马逊的一种云计算方式） 的能力")])]),s._v(" "),t("p",[s._v("在上面我们学习了 "),t("code",[s._v("Eureka")]),s._v(" 之后我们知道了 "),t("em",[s._v("服务提供者")]),s._v("  是 "),t("em",[s._v("消费者")]),s._v(" 通过 "),t("code",[s._v("Eureka Server")]),s._v(" 进行访问的，即 "),t("code",[s._v("Eureka Server")]),s._v(" 是 "),t("em",[s._v("服务提供者")]),s._v(" 的统一入口。那么整个应用中存在那么多 "),t("em",[s._v("消费者")]),s._v(" 需要用户进行调用，这个时候用户该怎样访问这些 "),t("em",[s._v("消费者工程")]),s._v(" 呢？当然可以像之前那样直接访问这些工程。但这种方式没有统一的消费者工程调用入口，不便于访问与管理，而 Zuul 就是这样的一个对于 "),t("em",[s._v("消费者")]),s._v(" 的统一入口。")]),s._v(" "),t("blockquote",[t("p",[s._v("如果学过前端的肯定都知道 Router 吧，比如 Flutter 中的路由，Vue，React中的路由，用了 Zuul 你会发现在路由功能方面和前端配置路由基本是一个理。😄 我偶尔撸撸 Flutter。")])]),s._v(" "),t("p",[s._v("大家对网关应该很熟吧，简单来讲网关是系统唯一对外的入口，介于客户端与服务器端之间，用于对请求进行"),t("strong",[s._v("鉴权")]),s._v("、"),t("strong",[s._v("限流")]),s._v("、 "),t("strong",[s._v("路由")]),s._v("、"),t("strong",[s._v("监控")]),s._v("等功能。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/zuul-sj22o93nfdsjkdsf.jpg"}}),s._v(" "),t("p",[s._v("没错，网关有的功能，"),t("code",[s._v("Zuul")]),s._v(" 基本都有。而 "),t("code",[s._v("Zuul")]),s._v(" 中最关键的就是 "),t("strong",[s._v("路由和过滤器")]),s._v(" 了，在官方文档中 "),t("code",[s._v("Zuul")]),s._v(" 的标题就是")]),s._v(" "),t("blockquote",[t("p",[s._v("Router and Filter : Zuul")])]),s._v(" "),t("h3",{attrs:{id:"zuul-的路由功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zuul-的路由功能"}},[s._v("#")]),s._v(" Zuul 的路由功能")]),s._v(" "),t("h4",{attrs:{id:"简单配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单配置"}},[s._v("#")]),s._v(" 简单配置")]),s._v(" "),t("p",[s._v("本来想给你们复制一些代码，但是想了想，因为各个代码配置比较零散，看起来也比较零散，我决定还是给你们画个图来解释吧。")]),s._v(" "),t("blockquote",[t("p",[s._v("请不要因为我这么好就给我点赞 👍 。 疯狂暗示。")])]),s._v(" "),t("p",[s._v("比如这个时候我们已经向 "),t("code",[s._v("Eureka Server")]),s._v(" 注册了两个 "),t("code",[s._v("Consumer")]),s._v(" 、三个 "),t("code",[s._v("Provicer")]),s._v(" ，这个时候我们再加个 "),t("code",[s._v("Zuul")]),s._v(" 网关应该变成这样子了。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/zuul-sj22o93nfdsjkdsf2312.jpg"}}),s._v(" "),t("p",[s._v("emmm，信息量有点大，我来解释一下。关于前面的知识我就不解释了😐。")]),s._v(" "),t("p",[s._v("首先，"),t("code",[s._v("Zuul")]),s._v(" 需要向 "),t("code",[s._v("Eureka")]),s._v(" 进行注册，注册有啥好处呢？")]),s._v(" "),t("p",[s._v("你傻呀，"),t("code",[s._v("Consumer")]),s._v(" 都向 "),t("code",[s._v("Eureka Server")]),s._v(" 进行注册了，我网关是不是只要注册就能拿到所有 "),t("code",[s._v("Consumer")]),s._v(" 的信息了？")]),s._v(" "),t("p",[s._v("拿到信息有什么好处呢？")]),s._v(" "),t("p",[s._v("我拿到信息我是不是可以获取所有的 "),t("code",[s._v("Consumer")]),s._v(" 的元数据(名称，ip，端口)？")]),s._v(" "),t("p",[s._v("拿到这些元数据有什么好处呢？拿到了我们是不是直接可以做"),t("strong",[s._v("路由映射")]),s._v("？比如原来用户调用 "),t("code",[s._v("Consumer1")]),s._v(" 的接口 "),t("code",[s._v("localhost:8001/studentInfo/update")]),s._v(" 这个请求，我们是不是可以这样进行调用了呢？"),t("code",[s._v("localhost:9000/consumer1/studentInfo/update")]),s._v(" 呢？你这样是不是恍然大悟了？")]),s._v(" "),t("blockquote",[t("p",[s._v("这里的url为了让更多人看懂所以没有使用 restful 风格。")])]),s._v(" "),t("p",[s._v("上面的你理解了，那么就能理解关于 "),t("code",[s._v("Zuul")]),s._v(" 最基本的配置了，看下面。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("server")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("eureka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("client")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("service-url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里只要注册 Eureka 就行了")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("defaultZone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("9997/eureka\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("然后在启动类上加入 "),t("code",[s._v("@EnableZuulProxy")]),s._v(" 注解就行了。没错，就是那么简单😃。")]),s._v(" "),t("h4",{attrs:{id:"统一前缀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#统一前缀"}},[s._v("#")]),s._v(" 统一前缀")]),s._v(" "),t("p",[s._v("这个很简单，就是我们可以在前面加一个统一的前缀，比如我们刚刚调用的是 "),t("code",[s._v("localhost:9000/consumer1/studentInfo/update")]),s._v("，这个时候我们在 "),t("code",[s._v("yaml")]),s._v(" 配置文件中添加如下。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("zuul")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("prefix")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /zuul\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("这样我们就需要通过 "),t("code",[s._v("localhost:9000/zuul/consumer1/studentInfo/update")]),s._v(" 来进行访问了。")]),s._v(" "),t("h4",{attrs:{id:"路由策略配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路由策略配置"}},[s._v("#")]),s._v(" 路由策略配置")]),s._v(" "),t("p",[s._v("你会发现前面的访问方式(直接使用服务名)，需要将微服务名称暴露给用户，会存在安全性问题。所以，可以自定义路径来替代微服务名称，即自定义路由策略。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("zuul")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("routes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("consumer1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /FrancisQ1/"),t("span",{pre:!0,attrs:{class:"token important"}},[s._v("**")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("consumer2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /FrancisQ2/"),t("span",{pre:!0,attrs:{class:"token important"}},[s._v("**")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("这个时候你就可以使用 "),t("code"),s._v("localhost:9000/zuul/FrancisQ1/studentInfo/update` 进行访问了。")]),s._v(" "),t("h4",{attrs:{id:"服务名屏蔽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务名屏蔽"}},[s._v("#")]),s._v(" 服务名屏蔽")]),s._v(" "),t("p",[s._v("这个时候你别以为你好了，你可以试试，在你配置完路由策略之后使用微服务名称还是可以访问的，这个时候你需要将服务名屏蔽。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("zuul")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ignore-services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h4",{attrs:{id:"路径屏蔽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#路径屏蔽"}},[s._v("#")]),s._v(" 路径屏蔽")]),s._v(" "),t("p",[t("code",[s._v("Zuul")]),s._v(" 还可以指定屏蔽掉的路径 URI，即只要用户请求中包含指定的 URI 路径，那么该请求将无法访问到指定的服务。通过该方式可以限制用户的权限。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("zuul")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ignore-patterns")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token important"}},[s._v("**/auto/**")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("这样关于 auto 的请求我们就可以过滤掉了。")]),s._v(" "),t("blockquote",[t("p",[s._v("** 代表匹配多级任意路径")]),s._v(" "),t("p",[s._v("*代表匹配一级任意路径")])]),s._v(" "),t("h4",{attrs:{id:"敏感请求头屏蔽"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#敏感请求头屏蔽"}},[s._v("#")]),s._v(" 敏感请求头屏蔽")]),s._v(" "),t("p",[s._v("默认情况下，像 "),t("code",[s._v("Cookie")]),s._v("、"),t("code",[s._v("Set-Cookie")]),s._v(" 等敏感请求头信息会被 "),t("code",[s._v("zuul")]),s._v(" 屏蔽掉，我们可以将这些默认屏蔽去掉，当然，也可以添加要屏蔽的请求头。")]),s._v(" "),t("h3",{attrs:{id:"zuul-的过滤功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zuul-的过滤功能"}},[s._v("#")]),s._v(" Zuul 的过滤功能")]),s._v(" "),t("p",[s._v("如果说，路由功能是 "),t("code",[s._v("Zuul")]),s._v(" 的基操的话，那么"),t("strong",[s._v("过滤器")]),s._v("就是 "),t("code",[s._v("Zuul")]),s._v("的利器了。毕竟所有请求都经过网关(Zuul)，那么我们可以进行各种过滤，这样我们就能实现 "),t("strong",[s._v("限流")]),s._v("，"),t("strong",[s._v("灰度发布")]),s._v("，"),t("strong",[s._v("权限控制")]),s._v(" 等等。")]),s._v(" "),t("h4",{attrs:{id:"简单实现一个请求时间日志打印"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单实现一个请求时间日志打印"}},[s._v("#")]),s._v(" 简单实现一个请求时间日志打印")]),s._v(" "),t("p",[s._v("要实现自己定义的 "),t("code",[s._v("Filter")]),s._v(" 我们只需要继承 "),t("code",[s._v("ZuulFilter")]),s._v(" 然后将这个过滤器类以 "),t("code",[s._v("@Component")]),s._v(" 注解加入 Spring 容器中就行了。")]),s._v(" "),t("p",[s._v("在给你们看代码之前我先给你们解释一下关于过滤器的一些注意点。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/zuul-sj22o93nfdsjkdsf2312244.jpg"}}),s._v(" "),t("p",[s._v("过滤器类型："),t("code",[s._v("Pre")]),s._v("、"),t("code",[s._v("Routing")]),s._v("、"),t("code",[s._v("Post")]),s._v("。前置"),t("code",[s._v("Pre")]),s._v("就是在请求之前进行过滤，"),t("code",[s._v("Routing")]),s._v("路由过滤器就是我们上面所讲的路由策略，而"),t("code",[s._v("Post")]),s._v("后置过滤器就是在 "),t("code",[s._v("Response")]),s._v(" 之前进行过滤的过滤器。你可以观察上图结合着理解，并且下面我会给出相应的注释。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 加入Spring容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PreRequestFilter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulFilter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回过滤器类型 这里是前置过滤器")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filterType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterConstants")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PRE_TYPE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定过滤顺序 越小越先执行，这里第一个执行")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当然不是只真正第一个 在Zuul内置中有其他过滤器会先执行")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 那是写死的 比如 SERVLET_DETECTION_FILTER_ORDER = -3")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filterOrder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 什么时候该进行过滤")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里我们可以进行一些判断，这样我们就可以过滤掉一些不符合规定的请求等等")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shouldFilter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果过滤器允许通过则怎么进行处理")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里我设置了全局的RequestContext并记录了请求开始时间")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestContext")]),s._v(" ctx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getCurrentContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"startTime"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// lombok的日志")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Slf4j")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 加入 Spring 容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AccessLogFilter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulFilter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定该过滤器的过滤类型")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此时是后置过滤器")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filterType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterConstants")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("POST_TYPE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// SEND_RESPONSE_FILTER_ORDER 是最后一个过滤器")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们此过滤器在它之前执行")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filterOrder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterConstants")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SEND_RESPONSE_FILTER_ORDER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shouldFilter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 过滤时执行的策略")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestContext")]),s._v(" context "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getCurrentContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HttpServletRequest")]),s._v(" request "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRequest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从RequestContext获取原先的开始时间 并通过它计算整个时间间隔")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" startTime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"startTime"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这里我可以获取HttpServletRequest来获取URI并且打印出来")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" uri "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" request"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRequestURI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" duration "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentTimeMillis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" startTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"uri: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" uri "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('", duration: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" duration "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ms"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br")])]),t("p",[s._v("上面就简单实现了请求时间日志打印功能，你有没有感受到 "),t("code",[s._v("Zuul")]),s._v(" 过滤功能的强大了呢？")]),s._v(" "),t("p",[s._v("没有？好的、那我们再来。")]),s._v(" "),t("h4",{attrs:{id:"令牌桶限流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#令牌桶限流"}},[s._v("#")]),s._v(" 令牌桶限流")]),s._v(" "),t("p",[s._v("当然不仅仅是令牌桶限流方式，"),t("code",[s._v("Zuul")]),s._v(" 只要是限流的活它都能干，这里我只是简单举个🌰。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/zuui-令牌桶限流.jpg",alt:"令牌桶限流"}}),s._v(" "),t("p",[s._v("我先来解释一下什么是 "),t("strong",[s._v("令牌桶限流")]),s._v(" 吧。")]),s._v(" "),t("p",[s._v("首先我们会有个桶，如果里面没有满那么就会以一定 "),t("strong",[s._v("固定的速率")]),s._v(" 会往里面放令牌，一个请求过来首先要从桶中获取令牌，如果没有获取到，那么这个请求就拒绝，如果获取到那么就放行。很简单吧，啊哈哈、")]),s._v(" "),t("p",[s._v("下面我们就通过 "),t("code",[s._v("Zuul")]),s._v(" 的前置过滤器来实现一下令牌桶限流。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lgq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("zuul"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("filter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("google"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("concurrent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("netflix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("zuul"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulFilter")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("netflix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("zuul"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestContext")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("netflix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("zuul"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exception"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulException")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("lombok"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("extern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("slf4j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Slf4j")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cloud"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("netflix"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("zuul"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("filters"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("support"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterConstants")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stereotype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Component")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Slf4j")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RouteFilter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulFilter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义一个令牌桶，每秒产生2个令牌，即每秒最多处理2个请求")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RATE_LIMITER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filterType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FilterConstants")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PRE_TYPE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("filterOrder")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZuulException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"放行"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shouldFilter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestContext")]),s._v(" context "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RequestContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getCurrentContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RATE_LIMITER")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tryAcquire")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("warn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"访问量超载"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定当前请求未通过过滤")]),s._v("\n            context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSendZuulResponse")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 向客户端返回响应码429，请求数量过多")]),s._v("\n            context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setResponseStatusCode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("429")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br")])]),t("p",[s._v("这样我们就能将请求数量控制在一秒两个，有没有觉得很酷？")]),s._v(" "),t("h3",{attrs:{id:"关于-zuul-的其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于-zuul-的其他"}},[s._v("#")]),s._v(" 关于 Zuul  的其他")]),s._v(" "),t("p",[t("code",[s._v("Zuul")]),s._v(" 的过滤器的功能肯定不止上面我所实现的两种，它还可以实现 "),t("strong",[s._v("权限校验")]),s._v("，包括我上面提到的 "),t("strong",[s._v("灰度发布")]),s._v(" 等等。")]),s._v(" "),t("p",[s._v("当然，"),t("code",[s._v("Zuul")]),s._v(" 作为网关肯定也存在 "),t("strong",[s._v("单点问题")]),s._v(" ，如果我们要保证 "),t("code",[s._v("Zuul")]),s._v(" 的高可用，我们就需要进行 "),t("code",[s._v("Zuul")]),s._v(" 的集群配置，这个时候可以借助额外的一些负载均衡器比如 "),t("code",[s._v("Nginx")]),s._v(" 。")]),s._v(" "),t("p",[s._v("##Spring Cloud配置管理——Config")]),s._v(" "),t("h3",{attrs:{id:"为什么要使用进行配置管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用进行配置管理"}},[s._v("#")]),s._v(" 为什么要使用进行配置管理？")]),s._v(" "),t("p",[s._v("当我们的微服务系统开始慢慢地庞大起来，那么多 "),t("code",[s._v("Consumer")]),s._v(" 、"),t("code",[s._v("Provider")]),s._v(" 、"),t("code",[s._v("Eureka Server")]),s._v(" 、"),t("code",[s._v("Zuul")]),s._v(" 系统都会持有自己的配置，这个时候我们在项目运行的时候可能需要更改某些应用的配置，如果我们不进行配置的统一管理，我们只能"),t("strong",[s._v("去每个应用下一个一个寻找配置文件然后修改配置文件再重启应用")]),s._v("。")]),s._v(" "),t("p",[s._v("首先对于分布式系统而言我们就不应该去每个应用下去分别修改配置文件，再者对于重启应用来说，服务无法访问所以直接抛弃了可用性，这是我们更不愿见到的。")]),s._v(" "),t("p",[s._v("那么有没有一种方法"),t("strong",[s._v("既能对配置文件统一地进行管理，又能在项目运行时动态修改配置文件呢？")])]),s._v(" "),t("p",[s._v("那就是我今天所要介绍的 "),t("code",[s._v("Spring Cloud Config")]),s._v(" 。")]),s._v(" "),t("blockquote",[t("p",[s._v("能进行配置管理的框架不止 "),t("code",[s._v("Spring Cloud Config")]),s._v(" 一种，大家可以根据需求自己选择（"),t("code",[s._v("disconf")]),s._v("，阿波罗等等）。而且对于 "),t("code",[s._v("Config")]),s._v(" 来说有些地方实现的不是那么尽人意。")])]),s._v(" "),t("h3",{attrs:{id:"config-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#config-是什么"}},[s._v("#")]),s._v(" Config 是什么")]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("Spring Cloud Config")]),s._v(" 为分布式系统中的外部化配置提供服务器和客户端支持。使用 "),t("code",[s._v("Config")]),s._v(" 服务器，可以在中心位置管理所有环境中应用程序的外部属性。")])]),s._v(" "),t("p",[s._v("简单来说，"),t("code",[s._v("Spring Cloud Config")]),s._v(" 就是能将各个 应用/系统/模块 的配置文件存放到 "),t("strong",[s._v("统一的地方然后进行管理")]),s._v("(Git 或者 SVN)。")]),s._v(" "),t("p",[s._v("你想一下，我们的应用是不是只有启动的时候才会进行配置文件的加载，那么我们的 "),t("code",[s._v("Spring Cloud Config")]),s._v(" 就暴露出一个接口给启动应用来获取它所想要的配置文件，应用获取到配置文件然后再进行它的初始化工作。就如下图。")]),s._v(" "),t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/config-ksksks.jpg"}}),s._v(" "),t("p",[s._v("当然这里你肯定还会有一个疑问，如果我在应用运行时去更改远程配置仓库(Git)中的对应配置文件，那么依赖于这个配置文件的已启动的应用会不会进行其相应配置的更改呢？")]),s._v(" "),t("p",[s._v("答案是不会的。")]),s._v(" "),t("p",[s._v("什么？那怎么进行动态修改配置文件呢？这不是出现了 "),t("strong",[s._v("配置漂移")]),s._v(" 吗？你个渣男😡，你又骗我！")]),s._v(" "),t("p",[s._v("别急嘛，你可以使用 "),t("code",[s._v("Webhooks")]),s._v(" ，这是  "),t("code",[s._v("github")]),s._v(" 提供的功能，它能确保远程库的配置文件更新后客户端中的配置信息也得到更新。")]),s._v(" "),t("p",[s._v("噢噢，这还差不多。我去查查怎么用。")]),s._v(" "),t("p",[s._v("慢着，听我说完，"),t("code",[s._v("Webhooks")]),s._v(" 虽然能解决，但是你了解一下会发现它根本不适合用于生产环境，所以基本不会使用它的。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/1ada747175704ecba3507074847002d0-new-imagee5249fee-c5ee-4472-9983-f1bd5801387c.png",alt:""}})]),s._v(" "),t("p",[s._v("而一般我们会使用 "),t("code",[s._v("Bus")]),s._v(" 消息总线 + "),t("code",[s._v("Spring Cloud Config")]),s._v(" 进行配置的动态刷新。")]),s._v(" "),t("h2",{attrs:{id:"引出-spring-cloud-bus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引出-spring-cloud-bus"}},[s._v("#")]),s._v(" 引出 Spring Cloud Bus")]),s._v(" "),t("blockquote",[t("p",[s._v("用于将服务和服务实例与分布式消息系统链接在一起的事件总线。在集群中传播状态更改很有用（例如配置更改事件）。")])]),s._v(" "),t("p",[s._v("你可以简单理解为 "),t("code",[s._v("Spring Cloud Bus")]),s._v(" 的作用就是"),t("strong",[s._v("管理和广播分布式系统中的消息")]),s._v("，也就是消息引擎系统中的广播模式。当然作为 "),t("strong",[s._v("消息总线")]),s._v(" 的 "),t("code",[s._v("Spring Cloud Bus")]),s._v(" 可以做很多事而不仅仅是客户端的配置刷新功能。")]),s._v(" "),t("p",[s._v("而拥有了 "),t("code",[s._v("Spring Cloud Bus")]),s._v(" 之后，我们只需要创建一个简单的请求，并且加上 "),t("code",[s._v("@ResfreshScope")]),s._v(" 注解就能进行配置的动态修改了，下面我画了张图供你理解。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://bitbucket.org/xu12345/document/raw/114a5f5c292cc412cd46304dc1d20cfda7c7a7f8/imgs/java/spring-cloud/springcloud-bus-s213dsfsd.jpg",alt:""}})]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("p",[s._v("这篇文章中我带大家初步了解了 "),t("code",[s._v("Spring Cloud")]),s._v(" 的各个组件，他们有")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Eureka")]),s._v(" 服务发现框架")]),s._v(" "),t("li",[t("code",[s._v("Ribbon")]),s._v(" 进程内负载均衡器")]),s._v(" "),t("li",[t("code",[s._v("Open Feign")]),s._v(" 服务调用映射")]),s._v(" "),t("li",[t("code",[s._v("Hystrix")]),s._v(" 服务降级熔断器")]),s._v(" "),t("li",[t("code",[s._v("Zuul")]),s._v(" 微服务网关")]),s._v(" "),t("li",[t("code",[s._v("Config")]),s._v(" 微服务统一配置中心")]),s._v(" "),t("li",[t("code",[s._v("Bus")]),s._v(" 消息总线")])]),s._v(" "),t("p",[s._v("如果你能这个时候能看懂文首那张图，也就说明了你已经对 "),t("code",[s._v("Spring Cloud")]),s._v(" 微服务有了一定的架构认识。")])])}),[],!1,null,null,null);t.default=e.exports}}]);